{"version":3,"sources":["components/Editor.js","components/hooks/useLocalStorage.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","onClick","prev","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOA+CeA,MAtCf,SAAgBC,GACf,IACCC,EAIGD,EAJHC,SACAC,EAGGF,EAHHE,YACAC,EAEGH,EAFHG,MACAC,EACGJ,EADHI,SAGD,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACC,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACC,sBAAKE,UAAU,eAAf,UACEN,EACD,wBAAQO,QAAS,kBAAMF,GAAQ,SAAAG,GAAI,OAAKA,MAAxC,oBAID,cAAC,aAAD,CACCC,eAbH,SAAsBC,EAAQC,EAAMV,GACnCC,EAASD,IAaPA,MAAOA,EACPK,UAAU,sBACVM,QAAS,CACRC,cAAc,EACdC,MAAM,EACNC,KAAMhB,EACNiB,MAAO,WACPC,aAAa,SCjBHC,MAnBf,SAAyBC,EAAKC,GAC7B,IAAMC,EAHQ,gBAGeF,EAC7B,EAA0BhB,oBAAS,WAClC,IAAMmB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GACb,oBAAjBF,EACHA,IAGAA,KAPT,mBAAOnB,EAAP,KAAc0B,EAAd,KAcA,OAHAC,qBAAU,WACTL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU7B,MAC/C,CAACoB,EAAapB,IACV,CAACA,EAAO0B,ICuCDI,MAvDf,WACC,MAAwBb,EAAgB,OAAQ,IAAhD,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAsBf,EAAgB,MAAO,IAA7C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAAoBjB,EAAgB,KAAM,IAA1C,mBAAOkB,EAAP,KAAWC,EAAX,KACA,EAA4BlC,mBAAS,IAArC,mBAAOmC,EAAP,KAAeC,EAAf,KAeA,OAbAX,qBAAU,WACT,IAAMY,EAAUC,YAAW,WAC1BF,EAAU,iCAAD,OAEAP,EAFA,mCAGCE,EAHD,qCAIEE,EAJF,wCAOP,KACH,OAAO,kBAAMM,aAAaF,MACxB,CAACR,EAAME,EAAKE,IAGd,qCACC,sBAAK9B,UAAU,gBAAf,UACC,cAAC,EAAD,CACCP,SAAS,MACTC,YAAY,OACZC,MAAO+B,EACP9B,SAAU+B,IAEX,cAAC,EAAD,CACClC,SAAS,MACTC,YAAY,MACZC,MAAOiC,EACPhC,SAAUiC,IAEX,cAAC,EAAD,CACCpC,SAAS,aACTC,YAAY,aACZC,MAAOmC,EACPlC,SAAUmC,OAGZ,qBAAK/B,UAAU,mBAAf,SACC,wBACCgC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eCxCGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5338ff15.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\r\n\r\n\r\nfunction Editor(props) {\r\n\tconst {\r\n\t\tlanguage,\r\n\t\tdisplayName,\r\n\t\tvalue,\r\n\t\tonChange\r\n\t} = props\r\n\r\n\tconst [open, setOpen] = useState(true)\r\n\r\n\tfunction handleChange(editor, data, value) {\r\n\t\tonChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n\t\t\t<div className='editor-title'>\r\n\t\t\t\t{displayName}\r\n\t\t\t\t<button onClick={() => setOpen(prev => !prev)}>\r\n\t\t\t\t\tO/C\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<ControlledEditor\r\n\t\t\t\tonBeforeChange={handleChange}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tclassName='code-mirroe-wrapper'\r\n\t\t\t\toptions={{\r\n\t\t\t\t\tlineWrapping: true,\r\n\t\t\t\t\tlint: true,\r\n\t\t\t\t\tmode: language,\r\n\t\t\t\t\ttheme: 'material',\r\n\t\t\t\t\tlineNumbers: true\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Editor;","import { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = 'codepen-clone'\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n\tconst prefixedKey = PREFIX + key\r\n\tconst [value, setValue] = useState(() => {\r\n\t\tconst jsonValue = localStorage.getItem(prefixedKey)\r\n\t\tif (jsonValue != null) return JSON.parse(jsonValue)\r\n\t\tif (typeof initialValue === 'function') {\r\n\t\t\treturn initialValue()\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn initialValue\r\n\t\t}\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(prefixedKey, JSON.stringify(value))\r\n\t}, [prefixedKey, value])\r\n\treturn [value, setValue]\r\n}\r\n\r\nexport default useLocalStorage;","import { useEffect, useState } from \"react\";\nimport Editor from \"./Editor\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nfunction App() {\n\tconst [html, setHtml] = useLocalStorage('html', '')\n\tconst [css, setCss] = useLocalStorage('css', '')\n\tconst [js, setJs] = useLocalStorage('js', '')\n\tconst [srcDoc, setSrcDoc] = useState('')\n\n\tuseEffect(() => {\n\t\tconst timeout = setTimeout(() => {\n\t\t\tsetSrcDoc(`\n\t\t\t<html>\n\t\t\t\t<body>${html}</body>\n\t\t\t\t<style>${css}</style>\n\t\t\t\t<script>${js}</script>\n\t\t\t</html>\n\t\t\t`)\n\t\t}, 250)\n\t\treturn () => clearTimeout(timeout)\n\t}, [html, css, js])\n\n\treturn (\n\t\t<>\n\t\t\t<div className='pane top-pane'>\n\t\t\t\t<Editor\n\t\t\t\t\tlanguage='xml'\n\t\t\t\t\tdisplayName='HTML'\n\t\t\t\t\tvalue={html}\n\t\t\t\t\tonChange={setHtml}\n\t\t\t\t/>\n\t\t\t\t<Editor\n\t\t\t\t\tlanguage='css'\n\t\t\t\t\tdisplayName='CSS'\n\t\t\t\t\tvalue={css}\n\t\t\t\t\tonChange={setCss}\n\t\t\t\t/>\n\t\t\t\t<Editor\n\t\t\t\t\tlanguage='javascript'\n\t\t\t\t\tdisplayName='Javascript'\n\t\t\t\t\tvalue={js}\n\t\t\t\t\tonChange={setJs}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='pane bottom-pane'>\n\t\t\t\t<iframe\n\t\t\t\t\tsrcDoc={srcDoc}\n\t\t\t\t\ttitle='output'\n\t\t\t\t\tsandbox='allow-scripts'\n\t\t\t\t\tframeBorder='0'\n\t\t\t\t\twidth='100%'\n\t\t\t\t\theight='100%'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}